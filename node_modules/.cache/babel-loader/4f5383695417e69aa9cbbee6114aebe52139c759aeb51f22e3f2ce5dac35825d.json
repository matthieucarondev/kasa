{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\Documents\\\\kasa-main\\\\kasa\\\\src\\\\components\\\\dropdown\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './DropDown.css';\nimport Arrow from '../../asset/ArrowDown.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DropDown({\n  title,\n  description\n}) {\n  _s();\n  //  /* Crée un Hook  d'état, qu’on va appeler isopen\n  // Pendant le rendu initial, l’état local (isopen) a la même valeur que celle passée en premier argument (false).\n  const [isOpen, setIsOpen] = useState(false);\n  return isOpen ?\n  /*#__PURE__*/\n  //si isopen =>false on affiche\n  _jsxDEV(\"div\", {\n    className: \"kasa-dropdown\",\n    id: `dropdown-${title}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"dropdown-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-arrow ${isOpen}`,\n        onClick: () => setIsOpen(false)\n        // false on laisse le dropdown fermer\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          alt: \"dropdown open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this) :\n  /*#__PURE__*/\n  // sinon on affiche ça\n  _jsxDEV(\"div\", {\n    className: \"kasa-dropdown\",\n    id: `dropdown-${title}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"dropdown-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown-arrow ${isOpen}`,\n        onClick: () => setIsOpen(true)\n        /* Si le dropdown est à TRUE alors il affichera la description */,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Arrow,\n          alt: \"dropdown close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(DropDown, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = DropDown;\nexport default DropDown;\nvar _c;\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"names":["React","useState","Arrow","jsxDEV","_jsxDEV","DropDown","title","description","_s","isOpen","setIsOpen","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Fujitsu/Documents/kasa-main/kasa/src/components/dropdown/Dropdown.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './DropDown.css'\r\nimport Arrow from '../../asset/ArrowDown.png'\r\n\r\nfunction DropDown({ title, description }) {\r\n  //  /* Crée un Hook  d'état, qu’on va appeler isopen\r\n  // Pendant le rendu initial, l’état local (isopen) a la même valeur que celle passée en premier argument (false).\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  return isOpen ? (\r\n    //si isopen =>false on affiche\r\n    <div className=\"kasa-dropdown\" id={`dropdown-${title}`}>\r\n      <div className=\"dropdown-header\">\r\n        <h3 className=\"dropdown-title\">{title}</h3>\r\n        <div\r\n          className={`dropdown-arrow ${isOpen}`}\r\n          onClick={() => setIsOpen(false)}\r\n          // false on laisse le dropdown fermer\r\n        >\r\n          <img src={Arrow} alt=\"dropdown open\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"dropdown-description\">{description}</div>\r\n    </div>\r\n  ) : (\r\n    // sinon on affiche ça\r\n    <div className=\"kasa-dropdown\" id={`dropdown-${title}`}>\r\n      <div className=\"dropdown-header\">\r\n        <h4 className=\"dropdown-title\">{title}</h4>\r\n        <div\r\n          className={`dropdown-arrow ${isOpen}`}\r\n          onClick={() => setIsOpen(true)}\r\n          /* Si le dropdown est à TRUE alors il affichera la description */\r\n        >\r\n          <img src={Arrow} alt=\"dropdown close\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DropDown\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EACxC;EACA;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,OAAOQ,MAAM;EAAA;EACX;EACAL,OAAA;IAAKO,SAAS,EAAC,eAAe;IAACC,EAAE,EAAG,YAAWN,KAAM,EAAE;IAAAO,QAAA,gBACrDT,OAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BT,OAAA;QAAIO,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAEP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Cb,OAAA;QACEO,SAAS,EAAG,kBAAiBF,MAAO,EAAE;QACtCS,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,KAAK;QAC9B;QAAA;QAAAG,QAAA,eAEAT,OAAA;UAAKe,GAAG,EAAEjB,KAAM;UAACkB,GAAG,EAAC;QAAe;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNb,OAAA;MAAKO,SAAS,EAAC,sBAAsB;MAAAE,QAAA,EAAEN;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;EAAA;EAEN;EACAb,OAAA;IAAKO,SAAS,EAAC,eAAe;IAACC,EAAE,EAAG,YAAWN,KAAM,EAAE;IAAAO,QAAA,eACrDT,OAAA;MAAKO,SAAS,EAAC,iBAAiB;MAAAE,QAAA,gBAC9BT,OAAA;QAAIO,SAAS,EAAC,gBAAgB;QAAAE,QAAA,EAAEP;MAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3Cb,OAAA;QACEO,SAAS,EAAG,kBAAiBF,MAAO,EAAE;QACtCS,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,IAAI;QAC7B;QAAAG,QAAA,eAEAT,OAAA;UAAKe,GAAG,EAAEjB,KAAM;UAACkB,GAAG,EAAC;QAAgB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;AACH;AAACT,EAAA,CAnCQH,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}